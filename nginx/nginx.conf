events {}

http {
    server_tokens off;

    log_format netdata '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '$request_length $request_time $upstream_response_time '
                       '"$http_referer" "$http_user_agent"';

    root /usr/share/nginx/html;

    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE+AES256;
    ssl_prefer_server_ciphers on;

    ssl_session_cache shared:SSL:10m;

    ssl_stapling on;
    ssl_stapling_verify on;

    resolver 127.0.0.11 ipv6=off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    proxy_set_header Host $host;

    server {
        listen 443 ssl;
        server_name auth.$DOMAIN;

        set $proxy_url oauth2_proxy:4180;

        location = /oauth2/callback {
            access_log off;
            include proxy-pass.conf;
        }

        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl;
        server_name netdata.$DOMAIN;

        set $proxy_url netdata:19999;

        access_log /var/log/nginx/logs/netdata.access.log netdata;

        include auth-location.conf;

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name grafana.$DOMAIN;

        set $proxy_url grafana:3000;

        access_log /var/log/nginx/logs/grafana.access.log netdata;

        include auth-location.conf;

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name pihole.$DOMAIN;

        set $proxy_url pihole:80;

        access_log /var/log/nginx/logs/pihole.access.log netdata;

        include auth-location.conf;

        location = / {
            return 301 /admin;
        }

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name plex.$DOMAIN;

        set $proxy_url plex:32400;

        access_log /var/log/nginx/logs/plex.access.log netdata;

        include auth-location.conf;

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name tautulli.$DOMAIN;

        set $proxy_url tautulli:8181;

        access_log /var/log/nginx/logs/tautulli.access.log netdata;

        include auth-location.conf;

        location /api/ {
            include proxy-pass.conf;
        }

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name movies.$DOMAIN;

        set $proxy_url radarr:7878;

        access_log /var/log/nginx/logs/radarr.access.log netdata;

        include auth-location.conf;

        location /api/ {
            include proxy-pass.conf;
        }

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name tv.$DOMAIN;

        set $proxy_url sonarr:8989;

        access_log /var/log/nginx/logs/sonarr.access.log netdata;

        include auth-location.conf;

        location /api/ {
            include proxy-pass.conf;
        }

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name jackett.$DOMAIN;

        set $proxy_url jackett:9117;

        access_log /var/log/nginx/logs/jackett.access.log netdata;

        include auth-location.conf;

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name downloads.$DOMAIN;

        set $proxy_url transmission:9091;

        access_log /var/log/nginx/logs/transmission.access.log netdata;

        include auth-location.conf;

        location = /rpc {
            auth_basic Transmission;
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://$proxy_url/transmission/rpc;
        }

        location / {
            include auth-request.conf;
            include proxy-pass.conf;
        }
    }

    server {
        listen 443 ssl;
        server_name spyfall.$DOMAIN;

        set $proxy_url spyfall:3000;

        access_log /var/log/nginx/logs/spyfall.access.log netdata;

        location / {
            include proxy-pass.conf;
        }
    }

    server {
        listen 80;
        server_name .$DOMAIN;

        access_log off;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name $DOMAIN;

        access_log off;

        return 307 https://netdata.$DOMAIN;
    }

     server {
        listen 80 default_server;
        listen 443 ssl default_server;

        return 404;
    }

    server {
        listen 8080 default_server;

        location = /stub_status {
            access_log off;
            stub_status;
        }

        location / {
            return 404;
        }
    }
}
