#
# Macros
#
<Macro Common $subdomain>
    ErrorLog logs/$subdomain.error.log
    CustomLog logs/$subdomain.access.log access
</Macro>

<Macro HTTPCommon $subdomain>
    Use Common $subdomain
</Macro>

<Macro HTTPSCommon $domain $subdomain>
    Use Common $subdomain

    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

    SSLEngine on
    SSLCertificateFile /usr/local/apache2/conf/letsencrypt/live/$domain/fullchain.pem
    SSLCertificateKeyFile /usr/local/apache2/conf/letsencrypt/live/$domain/privkey.pem
</Macro>

<Macro Redirect $domain $subdomain>
    Redirect permanent / https://$subdomain.$domain/
</Macro>

<Macro HTTPRoot $domain $subdomain>
    ServerName $domain
    Use Redirect $domain $subdomain

    Use HTTPCommon $subdomain
</Macro>

<Macro HTTPSRoot $domain $subdomain>
    ServerName $domain
    Use Redirect $domain $subdomain

    Use HTTPSCommon $domain $subdomain
</Macro>

<Macro HTTP $domain $subdomain>
    ServerName $subdomain.$domain
    Use Redirect $domain $subdomain

    Use HTTPCommon $subdomain
</Macro>

<Macro HTTPS $domain $subdomain $host $port>
    ServerName $subdomain.$domain

    ProxyPass / http://$host:$port/ retry=0
    ProxyPassReverse / http://$host:$port/

    Use HTTPSCommon $domain $subdomain
</Macro>

<Macro Auth $domain $subdomain $password $id $secret $users>
    Redirect /redirect /

    OIDCRedirectURI https://$subdomain.$domain/redirect
    OIDCCryptoPassphrase $password
    OIDCProviderMetadataURL https://accounts.google.com/.well-known/openid-configuration
    OIDCScope "openid email"
    OIDCClientID $id.apps.googleusercontent.com
    OIDCClientSecret $secret

    <Proxy>
      AuthType openid-connect
      AuthName $subdomain
      Require claim "email~($users)@gmail\.com"
    </Proxy>
</Macro>

#
# HTTP and HTTPS virtual host macros
#
<Macro HTTPVirtualHost $domain $subdomain>
    <VirtualHost *:80>
        Use HTTP $domain $subdomain
    </VirtualHost>
</Macro>

<Macro HTTPVirtualHostRoot $domain $subdomain>
    <VirtualHost *:80>
        Use HTTPRoot $domain $subdomain
    </VirtualHost>
</Macro>

<Macro HTTPSVirtualHost $domain $subdomain $host $port>
    <VirtualHost *:443>
        Use HTTPS $domain $subdomain $host $port
    </VirtualHost>
</Macro>

<Macro HTTPSVirtualHostAuth $domain $subdomain $host $port $password $id $secret $users>
    <VirtualHost *:443>
        Use HTTPS $domain $subdomain $host $port
        Use Auth $domain $subdomain $password $id $secret $users
    </VirtualHost>
</Macro>

<Macro HTTPSVirtualHostRoot $domain $subdomain>
    <VirtualHost *:443>
        Use HTTPSRoot $domain $subdomain
    </VirtualHost>
</Macro>

#
# Virtual host macros
#
<Macro VirtualHost $domain $subdomain $host $port>
    Use HTTPVirtualHost $domain $subdomain
    Use HTTPSVirtualHost $domain $subdomain $host $port
</Macro>

<Macro VirtualHostRoot $domain $subdomain $host $port>
    Use HTTPVirtualHostRoot $domain $subdomain
    Use HTTPVirtualHost $domain $subdomain
    Use HTTPSVirtualHostRoot $domain $subdomain
    Use HTTPSVirtualHost $domain $subdomain $host $port
</Macro>

<Macro VirtualHostAuth $domain $subdomain $host $port $password $id $secret $users>
    Use HTTPVirtualHost $domain $subdomain
    Use HTTPSVirtualHostAuth $domain $subdomain $host $port $password $id $secret $users
</Macro>

<Macro VirtualHostAuthRoot $domain $subdomain $host $port $password $id $secret $users>
    Use HTTPVirtualHostRoot $domain $subdomain
    Use HTTPVirtualHost $domain $subdomain
    Use HTTPSVirtualHostRoot $domain $subdomain
    Use HTTPSVirtualHostAuth $domain $subdomain $host $port $password $id $secret $users
</Macro>

#
# Variables
#
Define domain themachine.ml

#
# Virtual hosts
#
Use VirtualHostAuthRoot ${domain} netdata netdata 19999 ${password} ${id} ${secret} ${users}
Use VirtualHost ${domain} plex plex 32400
Use VirtualHostAuth ${domain} plexpy plexpy 8181 ${password} ${id} ${secret} ${users}
Use VirtualHostAuth ${domain} movies radarr 7878 ${password} ${id} ${secret} ${users}
Use VirtualHostAuth ${domain} tv sonarr 8989 ${password} ${id} ${secret} ${users}
Use VirtualHostAuth ${domain} transmission transmission 9091 ${password} ${id} ${secret} ${users}

#
# Sever status virtual host
#
<VirtualHost *:80>
    ServerName apache

    <Location /server-status>
        SetHandler server-status
        Require all granted
    </Location>
</VirtualHost>
