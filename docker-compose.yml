version: '3'

services:
  nginx:
    container_name: nginx
    image: nginx
    environment:
      TZ: $TZ
    hostname: &hostname $HOSTNAME
    restart: unless-stopped
    ports:
    - 80:80
    - 443:443
    volumes:
      - nginx-logs:/var/log/nginx
      - letsencrypt:/etc/letsencrypt:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/auth-location.conf:/etc/nginx/auth-location.conf:ro
      - ./nginx/auth-request.conf:/etc/nginx/auth-request.conf:ro

  oauth2_proxy:
    container_name: oauth2_proxy
    image: a5huynh/oauth2_proxy
    environment:
      TZ: $TZ
      CLIENT_ID: $CLIENT_ID
      CLIENT_SECRET: $CLIENT_SECRET
      COOKIE_SECRET: $COOKIE_SECRET
    command: >
      -config=/etc/oauth2_proxy/oauth2_proxy.cfg
      -client-id=$CLIENT_ID
      -client-secret=$CLIENT_SECRET
      -cookie-secret=$COOKIE_SECRET
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - letsencrypt:/etc/letsencrypt:ro
      - ./oauth2_proxy:/etc/oauth2_proxy:ro

  netdata:
    container_name: netdata
    image: pkoenig10/netdata
    environment:
      TZ: $TZ
    hostname: *hostname
    privileged: true
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/shm/fakenet:/host/proc/net:ro
      - nginx-logs:/var/log/nginx:ro
      - $DATA_DIR:/data
      - ./netdata/netdata.conf:/etc/netdata/netdata.conf:ro
      - ./netdata/apps_groups.conf:/etc/netdata/apps_groups.conf:ro
      - ./netdata/fping.conf:/etc/netdata/fping.conf:ro
      - ./netdata/nginx.conf:/etc/netdata/python.d/nginx.conf:ro
      - ./netdata/web_log.conf:/etc/netdata/python.d/web_log.conf:ro

  fakenet:
    container_name: fakenet
    image: pkoenig10/fakenet
    network_mode: host
    restart: unless-stopped
    volumes:
      - /dev/shm/fakenet:/dev/shm/fakenet

  influxdb:
    container_name: influxdb
    image: influxdb
    environment:
      TZ: $TZ
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $DATA_DIR/influxdb:/var/lib/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro

  grafana:
    container_name: grafana
    image: pkoenig10/grafana
    environment:
      TZ: $TZ
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    environment:
      TZ: $TZ
      PLEX_UID: $UID
      PLEX_GID: $GID
    hostname: *hostname
    restart: unless-stopped
    ports:
      - 32400:32400
    volumes:
      - $CONFIG_DIR/plex/config:/config
      - $DATA_DIR/tv:/tv
      - $DATA_DIR/movies:/movies

  plexpy:
    container_name: plexpy
    image: linuxserver/plexpy
    environment: &environment-linuxserver
      TZ: $TZ
      PUID: $UID
      PGID: $GID
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/plexpy/config:/config

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    environment: *environment-linuxserver
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/radarr/config:/config
      - $DATA_DIR/downloads:/downloads
      - $DATA_DIR/movies:/movies

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    environment: *environment-linuxserver
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/sonarr/config:/config
      - $DATA_DIR/downloads:/downloads
      - $DATA_DIR/tv:/tv

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    environment: *environment-linuxserver
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/jackett/config:/config

  transmission:
    container_name: transmission
    image: linuxserver/transmission
    environment: *environment-linuxserver
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/transmission/config:/config
      - $DATA_DIR/downloads:/downloads
      - $TRANSMISSION_WEB_DIR:/usr/share/transmission/web:ro

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    environment:
      TZ: $TZ
    command: >
      --schedule "0 0 4 * * *"
      --cleanup
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro

volumes:
  nginx-logs:
  letsencrypt:
    external: true
