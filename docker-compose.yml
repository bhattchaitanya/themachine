version: '3'

services:
  apache:
    container_name: apache
    image: pkoenig10/httpd-openidc
    environment: &environment
      TZ: America/Los_Angeles
      PUID: 1000
      PGID: 1000
      PLEX_UID: 1000
      PLEX_GID: 1000
    hostname: &hostname themachine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
      - ./apache/httpd-secrets.conf:/usr/local/apache2/conf/extra/httpd-secrets.conf:ro
      - ./apache/httpd-ssl.conf:/usr/local/apache2/conf/extra/httpd-ssl.conf:ro
      - ./apache/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf:ro
      - letsencrypt:/usr/local/apache2/conf/letsencrypt:ro

  netdata:
    container_name: netdata
    build: ./netdata
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - /data:/data
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./netdata/apps_groups.conf:/etc/netdata/apps_groups.conf:ro
      - ./netdata/fping.conf:/etc/netdata/fping.conf:ro
      - ./netdata/netdata.conf:/etc/netdata/netdata.conf:ro

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    ports:
      - 32400:32400
    volumes:
      - ./downloads:/data

  plexpy:
    container_name: plexpy
    image: linuxserver/plexpy
    environment: *environment
    hostname: *hostname
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - ./downloads:/downloads

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - ./downloads:/downloads

  transmission:
    container_name: transmission
    image: linuxserver/transmission
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - ./transmission-web:/usr/share/transmission/web:ro
      - ./downloads:/downloads

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    command: --schedule "0 0 4 * * *" --cleanup
    environment: *environment
    hostname: *hostname
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro

volumes:
  letsencrypt:
    external: true
